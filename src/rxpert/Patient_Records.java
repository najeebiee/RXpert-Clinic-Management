/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rxpert;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.io.FileReader;
import java.io.FileWriter;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 *
 * @author najx
 */
public class Patient_Records extends javax.swing.JFrame {
private static final String PATIENT_FILE = "src/maeclinicapp/patient.json";
private static final String RECORDS_FILE = "src/maeclinicapp/patient_records.json";
    /**
     * Creates new form Appointment_Scheduling
     */
    public Patient_Records() {
        initComponents();
        customInit();
        loadPatients();
        loadRecords();
        jComboBox20.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(ActionEvent evt) {
            jComboBox20ActionPerformed(evt);
        }
    });
        
    }
    private void loadPatients() {
        try {
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(PATIENT_FILE)) {
                JSONObject patientsJson = (JSONObject) parser.parse(reader);
                JSONArray patientList = (JSONArray) patientsJson.get("patientList");
                jComboBox19.removeAllItems();
                jComboBox20.removeAllItems();
                for (Object obj : patientList) {
                    JSONObject patient = (JSONObject) obj;
                    String patientName = (String) patient.get("name");
                    jComboBox19.addItem(patientName);
                    jComboBox20.addItem(patientName);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading patients: " + e.getMessage());
        }
    }

    private void loadRecords() {
        DefaultTableModel model = new DefaultTableModel(
            new Object[][]{},
            new String[]{"Visit ID", "Patient Name", "Date of Visit", "Reason for Visit", "Doctor's Notes", "Diagnosis", "Treatment Plan"}
        );
        try {
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(RECORDS_FILE)) {
                JSONObject recordsJson = (JSONObject) parser.parse(reader);
                JSONArray records = (JSONArray) recordsJson.get("records");
                for (Object obj : records) {
                    JSONObject record = (JSONObject) obj;
                    model.addRow(new Object[]{
                        record.get("visitId"),
                        record.get("patientName"),
                        record.get("dateOfVisit"),
                        record.get("reasonForVisit"),
                        record.get("doctorsNotes"),
                        record.get("diagnosis"),
                        record.get("treatmentPlan")
                    });
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error loading records: " + e.getMessage());
        }
        jTable1.setModel(model);
    }

    private String getPatientId(String patientName) {
        try {
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(PATIENT_FILE)) {
                JSONObject patientsJson = (JSONObject) parser.parse(reader);
                JSONArray patientList = (JSONArray) patientsJson.get("patientList");
                for (Object obj : patientList) {
                    JSONObject patient = (JSONObject) obj;
                    if (patient.get("name").equals(patientName)) {
                        return (String) patient.get("id");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error retrieving patient ID: " + e.getMessage());
        }
        return null;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        sideBarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DashboardButton = new javax.swing.JButton();
        PatientManagementButton = new javax.swing.JButton();
        AppointmentButton = new javax.swing.JButton();
        PatientRecordsButton = new javax.swing.JButton();
        BillingButton = new javax.swing.JButton();
        TaskButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jComboBox19 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton6 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jComboBox20 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));

        sideBarPanel.setBackground(new java.awt.Color(0, 204, 204));
        sideBarPanel.setForeground(new java.awt.Color(255, 255, 255));
        sideBarPanel.setMaximumSize(new java.awt.Dimension(250, 1050));
        sideBarPanel.setMinimumSize(new java.awt.Dimension(250, 1024));
        sideBarPanel.setPreferredSize(new java.awt.Dimension(250, 1024));
        sideBarPanel.setLayout(new javax.swing.BoxLayout(sideBarPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setFont(new java.awt.Font("Helvetica Rounded", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("   RXpert");
        jLabel1.setMaximumSize(new java.awt.Dimension(250, 150));
        jLabel1.setMinimumSize(new java.awt.Dimension(250, 150));
        jLabel1.setPreferredSize(new java.awt.Dimension(250, 150));
        sideBarPanel.add(jLabel1);

        DashboardButton.setBackground(new java.awt.Color(0, 204, 204));
        DashboardButton.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        DashboardButton.setForeground(new java.awt.Color(255, 255, 255));
        DashboardButton.setText("Dashboard");
        DashboardButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        DashboardButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        DashboardButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(DashboardButton);

        PatientManagementButton.setBackground(new java.awt.Color(0, 204, 204));
        PatientManagementButton.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        PatientManagementButton.setForeground(new java.awt.Color(255, 255, 255));
        PatientManagementButton.setText("Patient Management");
        PatientManagementButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        PatientManagementButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PatientManagementButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(PatientManagementButton);

        AppointmentButton.setBackground(new java.awt.Color(0, 204, 204));
        AppointmentButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        AppointmentButton.setForeground(new java.awt.Color(255, 255, 255));
        AppointmentButton.setText("Appointment Scheduling");
        AppointmentButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        AppointmentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AppointmentButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(AppointmentButton);

        PatientRecordsButton.setBackground(new java.awt.Color(0, 204, 204));
        PatientRecordsButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        PatientRecordsButton.setForeground(new java.awt.Color(255, 255, 255));
        PatientRecordsButton.setText("Patient Records");
        PatientRecordsButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        PatientRecordsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PatientRecordsButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(PatientRecordsButton);

        BillingButton.setBackground(new java.awt.Color(0, 204, 204));
        BillingButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        BillingButton.setForeground(new java.awt.Color(255, 255, 255));
        BillingButton.setText("Billing Services");
        BillingButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        BillingButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BillingButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(BillingButton);

        TaskButton.setBackground(new java.awt.Color(0, 204, 204));
        TaskButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        TaskButton.setForeground(new java.awt.Color(255, 255, 255));
        TaskButton.setText("Task Management");
        TaskButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        TaskButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TaskButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(TaskButton);

        getContentPane().add(sideBarPanel);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(1328, 50));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBackground(new java.awt.Color(252, 255, 246));
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(50, 50, 50, 50));

        jTabbedPane1.setBackground(new java.awt.Color(38, 198, 218));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));

        jLabel2.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Select Patient");

        jLabel3.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Date of Visit");

        jTextField2.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Reason for Visit");

        jTextField3.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Doctor's Notes");

        jTextField6.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Treatment Plan");

        jTextField7.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Diagnosis");

        jTextField8.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox1.setText("Please Confirm");
        jCheckBox1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 204));
        jButton1.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.setBorder(null);
        jButton1.setMinimumSize(new java.awt.Dimension(100, 40));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 40));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(255, 255, 153));
        jLabel6.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 102));
        jLabel6.setText("      Please Fill Up All the Form");
        jLabel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 102), 1, true));
        jLabel6.setOpaque(true);

        jComboBox19.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jComboBox19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jComboBox19.setMinimumSize(new java.awt.Dimension(104, 40));
        jComboBox19.setPreferredSize(new java.awt.Dimension(104, 40));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)))
                    .addComponent(jTextField6)
                    .addComponent(jTextField8)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextField3)
                    .addComponent(jTextField7)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8))
                        .addGap(0, 1047, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Add Visit", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));
        jPanel6.setForeground(new java.awt.Color(102, 102, 102));

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTable1.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jTable1.setForeground(new java.awt.Color(102, 102, 102));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient Name", "Appointment Date", "Time Slot", "Reason for Visit"
            }
        ));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(450);
        }

        jButton2.setBackground(new java.awt.Color(38, 198, 218));
        jButton2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(38, 198, 218));
        jButton2.setText("Previous");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(38, 198, 218));
        jButton3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(38, 198, 218));
        jButton3.setText("Next");
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setForeground(new java.awt.Color(38, 198, 218));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("2");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setOpaque(true);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setForeground(new java.awt.Color(38, 198, 218));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("3");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setOpaque(true);

        jLabel14.setBackground(new java.awt.Color(38, 198, 218));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("1");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel14.setOpaque(true);

        jLabel24.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText(" Search Patient Visit History :");

        jTextField15.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jTextField15.setForeground(new java.awt.Color(102, 102, 102));
        jTextField15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(38, 198, 218));
        jButton5.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(38, 198, 218));
        jButton5.setText("Search");
        jButton5.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton5)
                        .addComponent(jLabel24))
                    .addComponent(jButton3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2)))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("All Visits", jPanel6);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));

        jLabel5.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Select Patient");

        jLabel9.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Date of Visit");

        jTextField16.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Reason for Visit");

        jTextField17.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("Doctor's Notes");

        jTextField18.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Treatment Plan");

        jTextField19.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("Diagnosis");

        jTextField20.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField20ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox3.setText("Please Confirm");
        jCheckBox3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Update");
        jButton6.setBorder(null);
        jButton6.setMinimumSize(new java.awt.Dimension(100, 40));
        jButton6.setPreferredSize(new java.awt.Dimension(100, 40));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel29.setBackground(new java.awt.Color(255, 255, 153));
        jLabel29.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 102, 102));
        jLabel29.setText("      Please Fill Up All the Form");
        jLabel29.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 102), 1, true));
        jLabel29.setOpaque(true);

        jComboBox20.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jComboBox20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jComboBox20.setMinimumSize(new java.awt.Dimension(104, 40));
        jComboBox20.setPreferredSize(new java.awt.Dimension(104, 40));
        jComboBox20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox20ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("(Select Patient First)");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23))
                            .addComponent(jLabel25)
                            .addComponent(jComboBox20, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(jTextField18)
                    .addComponent(jTextField20)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jCheckBox3)
                        .addGap(35, 35, 35)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTextField17)
                    .addComponent(jTextField19)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27)
                            .addComponent(jLabel26))
                        .addGap(0, 1049, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel23))
                        .addGap(46, 46, 46)))
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Edit Visit", jPanel7);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 214, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 JOptionPane.showMessageDialog(this, "Previous page not implemented.");        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    JOptionPane.showMessageDialog(this, "Next page not implemented.");    // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
     jButton5ActionPerformed(evt);    // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed

    private void jTextField20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField20ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
     String patientName = (String) jComboBox20.getSelectedItem();
        String dateOfVisit = jTextField16.getText().trim();
        String reasonForVisit = jTextField17.getText().trim();
        String doctorsNotes = jTextField19.getText().trim();
        String diagnosis = jTextField18.getText().trim();
        String treatmentPlan = jTextField20.getText().trim();
        boolean confirmed = jCheckBox3.isSelected();

        // Validation
        if (patientName == null || dateOfVisit.isEmpty() || reasonForVisit.isEmpty() ||
            doctorsNotes.isEmpty() || diagnosis.isEmpty() || treatmentPlan.isEmpty() || !confirmed) {
            JOptionPane.showMessageDialog(this, "Please fill all fields and confirm.");
            return;
        }

        try {
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(RECORDS_FILE)) {
                JSONObject recordsJson = (JSONObject) parser.parse(reader);
                JSONArray records = (JSONArray) recordsJson.get("records");
                boolean updated = false;
                for (Object obj : records) {
                    JSONObject record = (JSONObject) obj;
                    if (record.get("patientName").equals(patientName) && record.get("dateOfVisit").equals(dateOfVisit)) {
                        record.put("reasonForVisit", reasonForVisit);
                        record.put("doctorsNotes", doctorsNotes);
                        record.put("diagnosis", diagnosis);
                        record.put("treatmentPlan", treatmentPlan);
                        updated = true;
                        break;
                    }
                }
                if (!updated) {
                    JOptionPane.showMessageDialog(this, "Record not found for patient " + patientName + " on " + dateOfVisit);
                    return;
                }

                try (FileWriter writer = new FileWriter(RECORDS_FILE)) {
                    writer.write(recordsJson.toJSONString());
                    writer.flush();
                }

                JOptionPane.showMessageDialog(this, "Visit record updated successfully!");
                // Reset form
                jComboBox20.setSelectedIndex(-1);
                jTextField16.setText("");
                jTextField17.setText("");
                jTextField18.setText("");
                jTextField19.setText("");
                jTextField20.setText("");
                jCheckBox3.setSelected(false);
                loadRecords();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error updating record: " + e.getMessage());
        }
    
    // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     String patientName = (String) jComboBox19.getSelectedItem();
        String dateOfVisit = jTextField2.getText().trim();
        String reasonForVisit = jTextField3.getText().trim();
        String doctorsNotes = jTextField7.getText().trim();
        String diagnosis = jTextField6.getText().trim();
        String treatmentPlan = jTextField8.getText().trim();
        boolean confirmed = jCheckBox1.isSelected();

        // Validation
        if (patientName == null || dateOfVisit.isEmpty() || reasonForVisit.isEmpty() ||
            doctorsNotes.isEmpty() || diagnosis.isEmpty() || treatmentPlan.isEmpty() || !confirmed) {
            JOptionPane.showMessageDialog(this, "Please fill all fields and confirm.");
            return;
        }

        // Get patient ID
        String patientId = getPatientId(patientName);
        if (patientId == null) {
            JOptionPane.showMessageDialog(this, "Error retrieving patient ID.");
            return;
        }

        try {
            // Load or initialize patient_records.json
            JSONObject recordsJson;
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(RECORDS_FILE)) {
                recordsJson = (JSONObject) parser.parse(reader);
            } catch (Exception e) {
                recordsJson = new JSONObject();
                recordsJson.put("records", new JSONArray());
            }

            // Add new record
            JSONArray records = (JSONArray) recordsJson.getOrDefault("records", new JSONArray());
            JSONObject record = new JSONObject();
            record.put("visitId", String.valueOf(records.size() + 1));
            record.put("patientId", patientId);
            record.put("patientName", patientName);
            record.put("dateOfVisit", dateOfVisit);
            record.put("reasonForVisit", reasonForVisit);
            record.put("doctorsNotes", doctorsNotes);
            record.put("diagnosis", diagnosis);
            record.put("treatmentPlan", treatmentPlan);
            record.put("dateAdded", LocalDateTime.now().format(DateTimeFormatter.ofPattern("yyyyMMddHHmm")));
            records.add(record);
            recordsJson.put("records", records);

            // Save to patient_records.json
            try (FileWriter writer = new FileWriter(RECORDS_FILE)) {
                writer.write(recordsJson.toJSONString());
                writer.flush();
            }

            JOptionPane.showMessageDialog(this, "Visit record added successfully!");
            // Reset form
            jComboBox19.setSelectedIndex(-1);
            jTextField2.setText("");
            jTextField3.setText("");
            jTextField6.setText("");
            jTextField7.setText("");
            jTextField8.setText("");
            jCheckBox1.setSelected(false);
            loadRecords();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error adding record: " + e.getMessage());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
 String searchQuery = jTextField15.getText().trim().toLowerCase();
        DefaultTableModel model = new DefaultTableModel(
            new Object[][]{},
            new String[]{"Visit ID", "Patient Name", "Date of Visit", "Reason for Visit", "Doctor's Notes", "Diagnosis", "Treatment Plan"}
        );
        try {
            JSONParser parser = new JSONParser();
            try (FileReader reader = new FileReader(RECORDS_FILE)) {
                JSONObject recordsJson = (JSONObject) parser.parse(reader);
                JSONArray records = (JSONArray) recordsJson.get("records");
                for (Object obj : records) {
                    JSONObject record = (JSONObject) obj;
                    if (((String) record.get("patientName")).toLowerCase().contains(searchQuery)) {
                        model.addRow(new Object[]{
                            record.get("visitId"),
                            record.get("patientName"),
                            record.get("dateOfVisit"),
                            record.get("reasonForVisit"),
                            record.get("doctorsNotes"),
                            record.get("diagnosis"),
                            record.get("treatmentPlan")
                        });
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error searching records: " + e.getMessage());
        }
        jTable1.setModel(model);
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboBox20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox20ActionPerformed
String patientName = (String) jComboBox20.getSelectedItem();
    if (patientName == null) {
        // Clear fields if no patient is selected
        jTextField16.setText("");
        jTextField17.setText("");
        jTextField18.setText("");
        jTextField19.setText("");
        jTextField20.setText("");
        return;
    }

    try {
        JSONParser parser = new JSONParser();
        try (FileReader reader = new FileReader(RECORDS_FILE)) {
            JSONObject recordsJson = (JSONObject) parser.parse(reader);
            JSONArray records = (JSONArray) recordsJson.get("records");
            JSONObject latestRecord = null;
            String latestDate = "";
            for (Object obj : records) {
                JSONObject record = (JSONObject) obj;
                if (record.get("patientName").equals(patientName)) {
                    String dateAdded = (String) record.get("dateAdded");
                    if (latestRecord == null || dateAdded.compareTo(latestDate) > 0) {
                        latestRecord = record;
                        latestDate = dateAdded;
                    }
                }
            }

            if (latestRecord != null) {
                // Populate fields with the latest visit details
                jTextField16.setText((String) latestRecord.get("dateOfVisit"));
                jTextField17.setText((String) latestRecord.get("reasonForVisit"));
                jTextField18.setText((String) latestRecord.get("diagnosis"));
                jTextField19.setText((String) latestRecord.get("doctorsNotes"));
                jTextField20.setText((String) latestRecord.get("treatmentPlan"));
            } else {
                // Clear fields if no visit is found
                jTextField16.setText("");
                jTextField17.setText("");
                jTextField18.setText("");
                jTextField19.setText("");
                jTextField20.setText("");
                JOptionPane.showMessageDialog(this, "No visit records found for " + patientName);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error loading visit details: " + e.getMessage());
    }        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox20ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Patient_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Patient_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Patient_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Patient_Records.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Patient_Records().setVisible(true);
            }
        });
    }
    
   private void customInit() {
     
       
     setExtendedState(JFrame.MAXIMIZED_BOTH);  // Make the frame full screen
     
    jLabel1.setBackground(Color.white);
    
    jTabbedPane1.setFont(new Font("Poppins", Font.BOLD, 16));
    
    // Set row height
    jTable1.setRowHeight(40);
        
    // Button listeners
    DashboardButton.addActionListener(e -> DashboardButton(e));
    AppointmentButton.addActionListener(e -> AppointmentButton(e));
    PatientRecordsButton.addActionListener(e -> PatientRecordsButton(e));
    BillingButton.addActionListener(e -> BillingButton(e));

    // Tab size
    setTabSize(jTabbedPane1, 0, new Dimension(175, 30));
    setTabSize(jTabbedPane1, 1, new Dimension(175, 30));
    setTabSize(jTabbedPane1, 2, new Dimension(175, 30));
    jTabbedPane1.revalidate();
    jTabbedPane1.repaint();

    // Apply gradients without replacing panels
    applyGradient(sideBarPanel, new Color(0x26C6DA), new Color(0x92FFCD), false); // Vertical
    
    setButtonBG(
        DashboardButton,
        AppointmentButton,
        PatientRecordsButton,
        PatientManagementButton,
        TaskButton, 
        BillingButton
    );


    revalidate();
    repaint();
}

    
    private void AppointmentButton(java.awt.event.ActionEvent evt) {
        Appointment_Scheduling a = new Appointment_Scheduling();
        a.setVisible(true);
        setVisible(false);
    }
    
    private void PatientRecordsButton(java.awt.event.ActionEvent evt) {
        Patient_Records a = new Patient_Records();
        a.setVisible(true);
        setVisible(false);
    }
    
    private void BillingButton(java.awt.event.ActionEvent evt) {
        Billing_Services a = new Billing_Services();
        a.setVisible(true);
        setVisible(false);
    }
    
    private void setTabSize(JTabbedPane tabbedPane, int index, Dimension size) {
        Font poppinsFont = new Font("Poppins", Font.PLAIN, 16);

        JLabel label = new JLabel(tabbedPane.getTitleAt(index));
        label.setPreferredSize(size);
        label.setMinimumSize(size);
        label.setMaximumSize(size);
        label.setFont(poppinsFont);
        label.setHorizontalAlignment(SwingConstants.CENTER);
        tabbedPane.setTabComponentAt(index, label);
}


    
    private void DashboardButton(java.awt.event.ActionEvent evt) {
        Dashboard a = new Dashboard();
        a.setVisible(true);
        setVisible(false);
    }
    
    public void setButtonBG(JButton... buttons) {
        for (JButton button: buttons) {
            button.setOpaque(false);
            button.setContentAreaFilled(false);
            button.setBorderPainted(false);
            button.setForeground(Color.WHITE);
        }
    }
    
    private void applyGradient(JPanel panel, Color startColor, Color endColor, boolean isHorizontal) {
    panel.setOpaque(false);
    panel.setUI(new javax.swing.plaf.PanelUI() {
        @Override
        public void update(Graphics g, JComponent c) {
            Graphics2D g2d = (Graphics2D) g;
            int width = c.getWidth();
            int height = c.getHeight();

            GradientPaint gp = isHorizontal
                ? new GradientPaint(0, 0, startColor, width, 0, endColor)
                : new GradientPaint(0, 0, startColor, 0, height, endColor);

            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);

            super.update(g, c); // Draw children/components
        }
    });
}



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AppointmentButton;
    private javax.swing.JButton BillingButton;
    private javax.swing.JButton DashboardButton;
    private javax.swing.JButton PatientManagementButton;
    private javax.swing.JButton PatientRecordsButton;
    private javax.swing.JButton TaskButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox<String> jComboBox19;
    private javax.swing.JComboBox<String> jComboBox20;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JPanel sideBarPanel;
    // End of variables declaration//GEN-END:variables
}
