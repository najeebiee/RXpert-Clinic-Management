/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rxpert;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingConstants;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 *
 * @author najx
 */
public class Task_Management extends javax.swing.JFrame {

    private final String filePath = "src/maeclinicapp/tasks.json";
    /**
     * Creates new form Appointment_Scheduling
     */
    public Task_Management() {
        initComponents();
        customInit();
         loadTasks(); // Load tasks when the frame initializes
        loadTaskTitles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuBar1 = new java.awt.MenuBar();
        menu1 = new java.awt.Menu();
        menu2 = new java.awt.Menu();
        sideBarPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DashboardButton = new javax.swing.JButton();
        PatientManagementButton = new javax.swing.JButton();
        AppointmentButton = new javax.swing.JButton();
        PatientRecordsButton = new javax.swing.JButton();
        BillingButton = new javax.swing.JButton();
        TaskButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jCheckBox4 = new javax.swing.JCheckBox();
        jButton8 = new javax.swing.JButton();
        jLabel41 = new javax.swing.JLabel();
        jComboBox17 = new javax.swing.JComboBox<>();
        jTextField13 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        taskTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        deleteTask = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel39 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jCheckBox5 = new javax.swing.JCheckBox();
        jButton9 = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        jComboBox19 = new javax.swing.JComboBox<>();
        jTextField18 = new javax.swing.JTextField();
        jComboBox20 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();

        menu1.setLabel("File");
        menuBar1.add(menu1);

        menu2.setLabel("Edit");
        menuBar1.add(menu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.X_AXIS));

        sideBarPanel.setBackground(new java.awt.Color(0, 204, 204));
        sideBarPanel.setForeground(new java.awt.Color(255, 255, 255));
        sideBarPanel.setMaximumSize(new java.awt.Dimension(250, 1050));
        sideBarPanel.setMinimumSize(new java.awt.Dimension(250, 1024));
        sideBarPanel.setPreferredSize(new java.awt.Dimension(250, 1024));
        sideBarPanel.setLayout(new javax.swing.BoxLayout(sideBarPanel, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setFont(new java.awt.Font("Helvetica Rounded", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("   RXpert");
        jLabel1.setMaximumSize(new java.awt.Dimension(250, 150));
        jLabel1.setMinimumSize(new java.awt.Dimension(250, 150));
        jLabel1.setPreferredSize(new java.awt.Dimension(250, 150));
        sideBarPanel.add(jLabel1);

        DashboardButton.setBackground(new java.awt.Color(0, 204, 204));
        DashboardButton.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        DashboardButton.setForeground(new java.awt.Color(255, 255, 255));
        DashboardButton.setText("Dashboard");
        DashboardButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        DashboardButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        DashboardButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(DashboardButton);

        PatientManagementButton.setBackground(new java.awt.Color(0, 204, 204));
        PatientManagementButton.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N
        PatientManagementButton.setForeground(new java.awt.Color(255, 255, 255));
        PatientManagementButton.setText("Patient Management");
        PatientManagementButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        PatientManagementButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PatientManagementButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(PatientManagementButton);

        AppointmentButton.setBackground(new java.awt.Color(0, 204, 204));
        AppointmentButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        AppointmentButton.setForeground(new java.awt.Color(255, 255, 255));
        AppointmentButton.setText("Appointment Scheduling");
        AppointmentButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        AppointmentButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AppointmentButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(AppointmentButton);

        PatientRecordsButton.setBackground(new java.awt.Color(0, 204, 204));
        PatientRecordsButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        PatientRecordsButton.setForeground(new java.awt.Color(255, 255, 255));
        PatientRecordsButton.setText("Patient Records");
        PatientRecordsButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        PatientRecordsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        PatientRecordsButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(PatientRecordsButton);

        BillingButton.setBackground(new java.awt.Color(0, 204, 204));
        BillingButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        BillingButton.setForeground(new java.awt.Color(255, 255, 255));
        BillingButton.setText("Billing Services");
        BillingButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        BillingButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BillingButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(BillingButton);

        TaskButton.setBackground(new java.awt.Color(0, 204, 204));
        TaskButton.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        TaskButton.setForeground(new java.awt.Color(255, 255, 255));
        TaskButton.setText("Task Management");
        TaskButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        TaskButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        TaskButton.setMaximumSize(new java.awt.Dimension(250, 50));
        sideBarPanel.add(TaskButton);

        getContentPane().add(sideBarPanel);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(0, 50));
        jPanel2.setPreferredSize(new java.awt.Dimension(1328, 50));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.Y_AXIS));

        jPanel4.setBackground(new java.awt.Color(252, 255, 246));
        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(50, 50, 50, 50));

        jTabbedPane1.setBackground(new java.awt.Color(38, 198, 218));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Poppins", 0, 16)); // NOI18N

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));

        jLabel33.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(102, 102, 102));
        jLabel33.setText("Task Title");

        jLabel34.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(102, 102, 102));
        jLabel34.setText("Priority");

        jLabel35.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Due Date");

        jTextField11.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(102, 102, 102));
        jLabel36.setText("Reminder Time");

        jTextField12.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField12ActionPerformed(evt);
            }
        });

        jLabel40.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(102, 102, 102));
        jLabel40.setText("Task Description");

        jCheckBox4.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox4.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jCheckBox4.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox4.setText("Please Confirm");
        jCheckBox4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 204, 204));
        jButton8.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Submit");
        jButton8.setBorder(null);
        jButton8.setMinimumSize(new java.awt.Dimension(100, 40));
        jButton8.setPreferredSize(new java.awt.Dimension(100, 40));

        jLabel41.setBackground(new java.awt.Color(255, 255, 153));
        jLabel41.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(255, 102, 102));
        jLabel41.setText("      Please Fill Up All the Form");
        jLabel41.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 102), 1, true));
        jLabel41.setOpaque(true);

        jComboBox17.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jComboBox17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "High" }));
        jComboBox17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jComboBox17.setMinimumSize(new java.awt.Dimension(104, 40));
        jComboBox17.setOpaque(true);
        jComboBox17.setPreferredSize(new java.awt.Dimension(104, 40));

        jTextField13.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField13ActionPerformed(evt);
            }
        });

        jTextField15.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel33)
                            .addComponent(jLabel35)
                            .addComponent(jTextField11, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addComponent(jTextField13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel36)
                            .addComponent(jLabel34)
                            .addComponent(jComboBox17, 0, 550, Short.MAX_VALUE)
                            .addComponent(jTextField15)))
                    .addComponent(jTextField12)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jCheckBox4)
                        .addGap(35, 35, 35)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(28, 28, 28))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel35))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 268, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Add Task", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createEmptyBorder(20, 20, 20, 20));

        taskTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        taskTable.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        taskTable.setForeground(new java.awt.Color(102, 102, 102));
        taskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Task Title", "Priority", "Due Date", "Reminder Time"
            }
        ));
        jScrollPane1.setViewportView(taskTable);

        jButton2.setBackground(new java.awt.Color(38, 198, 218));
        jButton2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(38, 198, 218));
        jButton2.setText("Previous");
        jButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(38, 198, 218));
        jButton3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(38, 198, 218));
        jButton3.setText("Next");
        jButton3.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 10, 5, 10));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(255, 255, 255));
        jLabel12.setForeground(new java.awt.Color(38, 198, 218));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("2");
        jLabel12.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel12.setOpaque(true);

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setForeground(new java.awt.Color(38, 198, 218));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("3");
        jLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel13.setOpaque(true);

        jLabel14.setBackground(new java.awt.Color(38, 198, 218));
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("1");
        jLabel14.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel14.setOpaque(true);

        deleteTask.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        deleteTask.setForeground(new java.awt.Color(38, 198, 218));
        deleteTask.setText("Delete Task");
        deleteTask.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(38, 198, 218)));
        deleteTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteTaskActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1188, Short.MAX_VALUE)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(deleteTask, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteTask, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab("All Tasks", jPanel6);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createEmptyBorder(15, 15, 15, 15));

        jLabel39.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel39.setForeground(new java.awt.Color(102, 102, 102));
        jLabel39.setText("Select Task");

        jLabel42.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(102, 102, 102));
        jLabel42.setText("Priority");

        jLabel43.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(102, 102, 102));
        jLabel43.setText("Due Date");

        jTextField14.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField14ActionPerformed(evt);
            }
        });

        jLabel44.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(102, 102, 102));
        jLabel44.setText("Reminder Time");

        jTextField16.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField16ActionPerformed(evt);
            }
        });

        jLabel45.setFont(new java.awt.Font("Poppins", 1, 18)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(102, 102, 102));
        jLabel45.setText("Task Description");

        jCheckBox5.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox5.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jCheckBox5.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox5.setText("Please Confirm");
        jCheckBox5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jCheckBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox5ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 204, 204));
        jButton9.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Update");
        jButton9.setBorder(null);
        jButton9.setMinimumSize(new java.awt.Dimension(100, 40));
        jButton9.setPreferredSize(new java.awt.Dimension(100, 40));

        jLabel46.setBackground(new java.awt.Color(255, 255, 153));
        jLabel46.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(255, 102, 102));
        jLabel46.setText("      Please Fill Up All the Form");
        jLabel46.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 102, 102), 1, true));
        jLabel46.setOpaque(true);

        jComboBox19.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jComboBox19.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Low", "Medium", "High" }));
        jComboBox19.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jComboBox19.setMinimumSize(new java.awt.Dimension(104, 40));
        jComboBox19.setOpaque(true);
        jComboBox19.setPreferredSize(new java.awt.Dimension(104, 40));

        jTextField18.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jTextField18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });

        jComboBox20.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jComboBox20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jComboBox20.setMinimumSize(new java.awt.Dimension(104, 40));
        jComboBox20.setOpaque(true);
        jComboBox20.setPreferredSize(new java.awt.Dimension(104, 40));

        jLabel23.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("(Select Task First)");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel39)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel23))
                            .addComponent(jLabel43)
                            .addComponent(jTextField14, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                            .addComponent(jComboBox20, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel44)
                            .addComponent(jLabel42)
                            .addComponent(jComboBox19, 0, 550, Short.MAX_VALUE)
                            .addComponent(jTextField18)))
                    .addComponent(jTextField16)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jCheckBox5)
                        .addGap(35, 35, 35)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel39)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel44)
                    .addComponent(jLabel43))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox5)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 270, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Edit Tasks", jPanel7);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 710, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 214, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel4);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jTextField12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField12ActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField15ActionPerformed

    private void deleteTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteTaskActionPerformed
        int selectedRow = taskTable.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) taskTable.getModel();
            String taskTitle = taskTable.getValueAt(selectedRow, 0).toString(); // Task Title

            model.removeRow(selectedRow);

            File file = new File(filePath);
            JSONParser parser = new JSONParser();

            try {
                JSONObject jsonObject = (JSONObject) parser.parse(new FileReader(file));
                JSONArray taskList = (JSONArray) jsonObject.get("taskList");

                for (int i = 0; i < taskList.size(); i++) {
                    JSONObject task = (JSONObject) taskList.get(i);
                    if (task.get("title").equals(taskTitle)) {
                        taskList.remove(i);
                        break;
                    }
                }

                try (FileWriter writer = new FileWriter(file)) {
                    jsonObject.put("taskList", taskList);
                    writer.write(jsonObject.toJSONString());
                    writer.flush();
                }

                JOptionPane.showMessageDialog(this, "Task deleted successfully!");
                loadTasks();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error updating JSON file.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row to remove.");
        }
        
    }//GEN-LAST:event_deleteTaskActionPerformed

    private void jTextField14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField14ActionPerformed

    private void jTextField16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField16ActionPerformed

    private void jCheckBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox5ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Task_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Task_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Task_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Task_Management.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Task_Management().setVisible(true);
            }
        });
    }
    
   private void customInit() {
       
        setExtendedState(JFrame.MAXIMIZED_BOTH);  // Make the frame full screen
       
        jLabel1.setBackground(Color.white);
        jTabbedPane1.setFont(new Font("Poppins", Font.BOLD, 16));

        // Set column widths for taskTable
        TableColumnModel columnModel = taskTable.getColumnModel();
        columnModel.getColumn(0).setPreferredWidth(200); // Task Title
        columnModel.getColumn(1).setPreferredWidth(100); // Priority
        columnModel.getColumn(2).setPreferredWidth(150); // Due Date
        columnModel.getColumn(3).setPreferredWidth(150); // Reminder Time
        taskTable.setRowHeight(40);

        // Navigation button listeners
        DashboardButton.addActionListener(e -> DashboardButton(e));
        PatientManagementButton.addActionListener(e -> PatientManagementButton(e));
        AppointmentButton.addActionListener(e -> AppointmentButton(e));
        PatientRecordsButton.addActionListener(e -> PatientRecordsButton(e));
        BillingButton.addActionListener(e -> BillingButton(e));
        TaskButton.addActionListener(e -> TaskButton(e));

        // Action listeners for task operations
        jButton8.addActionListener(e -> addTask());
        jButton9.addActionListener(e -> updateTask());
        jComboBox20.addActionListener(e -> {
            String selectedTitle = (String) jComboBox20.getSelectedItem();
            if (selectedTitle != null) {
                loadTaskDetails(selectedTitle);
            }
        });

        // Set tab sizes
        setTabSize(jTabbedPane1, 0, new Dimension(175, 30));
        setTabSize(jTabbedPane1, 1, new Dimension(175, 30));
        setTabSize(jTabbedPane1, 2, new Dimension(175, 30));
        jTabbedPane1.revalidate();
        jTabbedPane1.repaint();

        // Apply gradient to sidebar
        applyGradient(sideBarPanel, new Color(0x26C6DA), new Color(0x92FFCD), false);

        // Set button backgrounds
        setButtonBG(DashboardButton, AppointmentButton, PatientRecordsButton, PatientManagementButton, TaskButton, BillingButton);

        revalidate();
        repaint();
    }

    // Navigation methods
    private void DashboardButton(java.awt.event.ActionEvent evt) {
        Dashboard a = new Dashboard();
        a.setVisible(true);
        setVisible(false);
    }

    private void PatientManagementButton(java.awt.event.ActionEvent evt) {
        Patient_Management a = new Patient_Management();
        a.setVisible(true);
        setVisible(false);
    }

    private void AppointmentButton(java.awt.event.ActionEvent evt) {
        Appointment_Scheduling a = new Appointment_Scheduling();
        a.setVisible(true);
        setVisible(false);
    }

    private void PatientRecordsButton(java.awt.event.ActionEvent evt) {
        Patient_Records a = new Patient_Records();
        a.setVisible(true);
        setVisible(false);
    }

    private void BillingButton(java.awt.event.ActionEvent evt) {
        Billing_Services a = new Billing_Services();
        a.setVisible(true);
        setVisible(false);
    }

    private void TaskButton(java.awt.event.ActionEvent evt) {
        // Already in Task_Management, no action needed
    }

    // Load tasks into the table
    private void loadTasks() {
        DefaultTableModel model = (DefaultTableModel) taskTable.getModel();
        model.setRowCount(0);

        File file = new File(filePath);
        if (!file.exists()) {
            try {
                file.createNewFile();
                JSONObject jsonObject = new JSONObject();
                jsonObject.put("taskList", new JSONArray());
                try (FileWriter writer = new FileWriter(file)) {
                    writer.write(jsonObject.toJSONString());
                    writer.flush();
                }
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        try (FileReader reader = new FileReader(file)) {
            JSONParser parser = new JSONParser();
            JSONObject jsonObject = (JSONObject) parser.parse(reader);
            JSONArray taskList = (JSONArray) jsonObject.get("taskList");

            for (Object obj : taskList) {
                JSONObject task = (JSONObject) obj;
                model.addRow(new Object[]{
                    task.get("title"),
                    task.get("priority"),
                    task.get("dueDate"),
                    task.get("reminderTime")
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Add a new task to the JSON file
    private void addTask() {
        File file = new File(filePath);
        JSONObject jsonObject = new JSONObject();
        JSONArray taskList = new JSONArray();

        if (file.exists() && file.length() > 0) {
            try (FileReader reader = new FileReader(file)) {
                JSONParser parser = new JSONParser();
                jsonObject = (JSONObject) parser.parse(reader);
                taskList = (JSONArray) jsonObject.get("taskList");
            } catch (IOException | ParseException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error reading task records.");
                return;
            }
        }

        JSONObject task = new JSONObject();
        task.put("taskId", String.valueOf(taskList.size() + 1));
        task.put("title", jTextField13.getText());
        task.put("priority", jComboBox17.getSelectedItem().toString());
        task.put("dueDate", jTextField11.getText());
        task.put("reminderTime", jTextField15.getText());
        task.put("description", jTextField12.getText());

        taskList.add(task);
        jsonObject.put("taskList", taskList);

        try (FileWriter writer = new FileWriter(file)) {
            writer.write(jsonObject.toJSONString());
            writer.flush();
        } catch (IOException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error saving task record.");
            return;
        }

        clearAddTaskFields();
        JOptionPane.showMessageDialog(this, "Task added successfully!");
        loadTasks();
    }

    // Clear fields in the "Add Task" tab
    private void clearAddTaskFields() {
        jTextField13.setText("");
        jComboBox17.setSelectedIndex(0);
        jTextField11.setText("");
        jTextField15.setText("");
        jTextField12.setText("");
    }

    // Load task titles into the combo box for editing
    private void loadTaskTitles() {
        jComboBox20.removeAllItems();
        File file = new File(filePath);

        if (file.exists()) {
            try (FileReader reader = new FileReader(file)) {
                JSONParser parser = new JSONParser();
                JSONObject jsonObject = (JSONObject) parser.parse(reader);
                JSONArray taskList = (JSONArray) jsonObject.get("taskList");

                for (Object obj : taskList) {
                    JSONObject task = (JSONObject) obj;
                    jComboBox20.addItem(task.get("title").toString());
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    // Load task details into the "Edit Tasks" tab
    private void loadTaskDetails(String title) {
        File file = new File(filePath);
        try (FileReader reader = new FileReader(file)) {
            JSONParser parser = new JSONParser();
            JSONObject jsonObject = (JSONObject) parser.parse(reader);
            JSONArray taskList = (JSONArray) jsonObject.get("taskList");

            for (Object obj : taskList) {
                JSONObject task = (JSONObject) obj;
                if (task.get("title").equals(title)) {
                    jComboBox19.setSelectedItem(task.get("priority"));
                    jTextField14.setText(task.get("dueDate").toString());
                    jTextField18.setText(task.get("reminderTime").toString());
                    jTextField16.setText(task.get("description").toString());
                    return;
                }
            }

            JOptionPane.showMessageDialog(this, "Task not found!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // Update task details in the JSON file
    private void updateTask() {
        String selectedTitle = (String) jComboBox20.getSelectedItem();
        if (selectedTitle == null) {
            JOptionPane.showMessageDialog(this, "Please select a task to update.");
            return;
        }

        File file = new File(filePath);
        try (FileReader reader = new FileReader(file)) {
            JSONParser parser = new JSONParser();
            JSONObject jsonObject = (JSONObject) parser.parse(reader);
            JSONArray taskList = (JSONArray) jsonObject.get("taskList");

            boolean found = false;
            for (int i = 0; i < taskList.size(); i++) {
                JSONObject task = (JSONObject) taskList.get(i);
                if (task.get("title").equals(selectedTitle)) {
                    task.put("priority", jComboBox19.getSelectedItem().toString());
                    task.put("dueDate", jTextField14.getText());
                    task.put("reminderTime", jTextField18.getText());
                    task.put("description", jTextField16.getText());
                    found = true;
                    break;
                }
            }

            if (!found) {
                JOptionPane.showMessageDialog(this, "Task not found!");
                return;
            }

            try (FileWriter writer = new FileWriter(file)) {
                jsonObject.put("taskList", taskList);
                writer.write(jsonObject.toJSONString());
                writer.flush();
            }

            JOptionPane.showMessageDialog(this, "Task updated successfully!");
            loadTasks();
            clearEditTaskFields();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating task record.");
        }
    }

    // Clear fields in the "Edit Tasks" tab
    private void clearEditTaskFields() {
        jComboBox20.setSelectedIndex(-1);
        jComboBox19.setSelectedIndex(0);
        jTextField14.setText("");
        jTextField18.setText("");
        jTextField16.setText("");
    }

    // UI helper methods
    private void setTabSize(JTabbedPane tabbedPane, int index, Dimension size) {
        Font poppinsFont = new Font("Poppins", Font.PLAIN, 16);
        JLabel label = new JLabel(tabbedPane.getTitleAt(index));
        label.setPreferredSize(size);
        label.setMinimumSize(size);
        label.setMaximumSize(size);
        label.setFont(poppinsFont);
        label.setHorizontalAlignment(SwingConstants.CENTER);
        tabbedPane.setTabComponentAt(index, label);
    }

    public void setButtonBG(JButton... buttons) {
        for (JButton button : buttons) {
            button.setOpaque(false);
            button.setContentAreaFilled(false);
            button.setBorderPainted(false);
            button.setForeground(Color.WHITE);
        }
    }

    private void applyGradient(JPanel panel, Color startColor, Color endColor, boolean isHorizontal) {
        panel.setOpaque(false);
        panel.setUI(new javax.swing.plaf.PanelUI() {
            @Override
            public void update(Graphics g, JComponent c) {
                Graphics2D g2d = (Graphics2D) g;
                int width = c.getWidth();
                int height = c.getHeight();
                GradientPaint gp = isHorizontal
                    ? new GradientPaint(0, 0, startColor, width, 0, endColor)
                    : new GradientPaint(0, 0, startColor, 0, height, endColor);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, width, height);
                super.update(g, c);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AppointmentButton;
    private javax.swing.JButton BillingButton;
    private javax.swing.JButton DashboardButton;
    private javax.swing.JButton PatientManagementButton;
    private javax.swing.JButton PatientRecordsButton;
    private javax.swing.JButton TaskButton;
    private javax.swing.JButton deleteTask;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JComboBox<String> jComboBox17;
    private javax.swing.JComboBox<String> jComboBox19;
    private javax.swing.JComboBox<String> jComboBox20;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField18;
    private java.awt.Menu menu1;
    private java.awt.Menu menu2;
    private java.awt.MenuBar menuBar1;
    private javax.swing.JPanel sideBarPanel;
    private javax.swing.JTable taskTable;
    // End of variables declaration//GEN-END:variables
}
